import {
  ICreate{{pascalCase name}}Usecase,
  IUpdate{{pascalCase name}}ByIdUsecase,
} from '@/domains/{{dashCase name}}/usecases';
import {
  IGet{{pascalCase name}}sByFilterRepository,
  IDelete{{pascalCase name}}ByIdRepository,
} from '@/domains/{{dashCase name}}/usecases/repos';
import { OrderByFilter, Pagination } from '@/shared/helpers';

export const mockCreate{{pascalCase name}}Params = (): ICreate{{pascalCase name}}Usecase.Params => ({
  name: '{{camelCase name}} name',
  enabled: true,
});

export const mock{{pascalCase name}}Entity = (): ICreate{{pascalCase name}}Usecase.Response => ({
  id: 'a98a83d2-87f4-4a48-bfce-a80e27d7a7e2',
  name: '{{camelCase name}} name',
  enabled: true,
  createdAt: new Date('2022-10-03'),
  updatedAt: new Date('2022-10-03'),
});

export const mockList{{pascalCase name}}Params = (): IGet{{pascalCase name}}sByFilterRepository.Params => ({
  filters: {
    name: '{{camelCase name}} name',
    enabled: true,
    createdAt: { initialDate: new Date('2022-10-03') },
    updatedAt: { initialDate: new Date('2022-10-03') },
  },
  orderBy: new OrderByFilter({}),
  pagination: new Pagination({}),
});

export const mockList{{pascalCase name}}EmptyParams = (): IGet{{pascalCase name}}sByFilterRepository.Params => ({
  filters: {},
  orderBy: new OrderByFilter({}),
  pagination: new Pagination({}),
});

export const mockUpdate{{pascalCase name}}Params = (): IUpdate{{pascalCase name}}ByIdUsecase.Params => ({
  id: 'a98a83d2-87f4-4a48-bfce-a80e27d7a7e2',
  paramsToUpdate: {
    name: '{{camelCase name}} other name',
  },
});

export const mockDelete{{pascalCase name}}ByIdParams =
  (): IDelete{{pascalCase name}}ByIdRepository.Params => ('a98a83d2-87f4-4a48-bfce-a80e27d7a7e2');
