import { ICount{{pascalCase name}}sByFilterRepository } from '@/domains/{{dashCase name}}';
import { prismaConnector, PrismaFormatter } from '@/shared/infra/prisma';
import { PrismaClient } from '@prisma/client';

export class PrismaCount{{pascalCase name}}sByFilterRepository
  implements ICount{{pascalCase name}}sByFilterRepository
{
  private prismaConnection: PrismaClient;

  constructor() {
    this.prismaConnection = prismaConnector.connect();
  }

  async count(
    filter: ICount{{pascalCase name}}sByFilterRepository.Params
  ): Promise<ICount{{pascalCase name}}sByFilterRepository.Result> {
    const filterParams = PrismaFormatter.formatFilter(filter);
    const total{{pascalCase name}}s = await this.prismaConnection.{{camelCase name}}.count(filterParams);

    return total{{pascalCase name}}s;
  }
}
