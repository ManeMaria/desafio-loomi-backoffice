import { ISave{{pascalCase name}}Repository } from '@/domains/{{dashCase name}}';
import { prismaConnector, PrismaException } from '@/shared/infra/prisma';
import { PrismaClient } from '@prisma/client';

export class PrismaSave{{pascalCase name}}Repository implements ISave{{pascalCase name}}Repository {
  private prismaConnection: PrismaClient;

  constructor() {
    this.prismaConnection = prismaConnector.connect();
  }

  async save(
    {{camelCase name}}Params: ISave{{pascalCase name}}Repository.Params
  ): Promise<ISave{{pascalCase name}}Repository.Result> {
    try {
      const {{camelCase name}}Created = await this.prismaConnection.{{camelCase name}}.create({
        data: {{camelCase name}}Params,
      });

      return {{camelCase name}}Created;
    } catch(error) {
      throw new PrismaException(error);
    }
  }
}
