import { IGet{{pascalCase name}}ByNameRepository } from '@/domains/{{dashCase name}}';
import { PrismaClient } from '@prisma/client';
import { prismaConnector, PrismaException } from '@/shared/infra/prisma';

export class PrismaGet{{pascalCase name}}ByNameRepository implements IGet{{pascalCase name}}ByNameRepository {
  private prismaConnection: PrismaClient;

  constructor() {
    this.prismaConnection = prismaConnector.connect();
  }

  async get(
    name: IGet{{pascalCase name}}ByNameRepository.Params
  ): Promise<IGet{{pascalCase name}}ByNameRepository.Result> {
    try {
      const [{{camelCase name}}] = await this.prismaConnection.{{camelCase name}}.findMany({
        where: { name },
      });

      return {{camelCase name}};
    } catch(error) {
      throw new PrismaException(error);
    }
  }
}
