name: CI/CD - Staging - Pipeline
on:
  push:
    branches: [develop]

jobs:
  continuous-deployment:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/checkout@v2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY}}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Remove Unused Docker Volumes
        run: docker volume prune --force

      - name: Display GITHUB_WORKSPACE
        run: |
          echo ls -la ${{ github.workspace }}

      - name: SSH into EC2 instance and run Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd ${{ github.workspace }}
              CONTAINERS=$(docker ps -q -f status=exited)
              if [ -n "$CONTAINERS" ]; then
                docker rm -f $CONTAINERS
              else
                echo "No exited containers to remove."
              fi
              ls -la  # Exibir novamente o conteúdo do diretório para fins de depuração
              docker-compose -f docker-compose.yml down
              docker-compose -f docker-compose.yml up api
